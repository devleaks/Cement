<!DOCTYPE html>
<html>
<head>
<meta charset="${textEncoding}">
<meta name="generator" content="jAlbum ${internalVersion} with ${skinName} ${skinVersion}, ${style} style, album creation date ${currentDate}">
<ja:if exists="albumTags"><meta content="${albumTags}" name="keywords"></ja:if>
<ja:if exists="albumDescription"><meta content="${albumDescription}" name="description"></ja:if>
<title>${title}</title>

<%-- Add Modernizr library --%>
<script type="text/javascript" src="${resPath}/lib/modernizr.js?v2.6.2"></script>

<%-- Font Awesome --%>
<link rel="stylesheet" type="text/css" href="${resPath}/font-awesome/css/font-awesome.min.css?v4.0.3" />

<%-- Add jQuery library --%>
<script type="text/javascript" src="${resPath}/lib/jquery-1.10.2.js"></script>
<%-- Add mousewheel plugin (this is optional) --%>
<script type="text/javascript" src="${resPath}/lib/jquery.mousewheel-3.0.6.pack.js"></script>
<%-- Add cookie plugin --%>
<script type="text/javascript" src="${resPath}/lib/jquery.cookie.js"></script>

<%-- Add layout library --%>
<ja:switch test="${metafizzyTool}">
	<ja:case value="packery">
<script  type="text/javascript" src="${resPath}/metafizzy/packery.pkgd.js?v=1.3.2"></script>
	</ja:case>
	<ja:case value="masonry">
<script  type="text/javascript" src="${resPath}/metafizzy/masonry.pkgd.js?v=3.2.2"></script>
	</ja:case>
	<ja:case value="isotope">
<script  type="text/javascript" src="${resPath}/metafizzy/jquery.isotope.js?v2.1.0"></script>
	</ja:case>
	<ja:case value="playful">
<script type="text/javascript" src="${resPath}/lib/jquery-ui.js"></script>
<script  type="text/javascript" src="${resPath}/metafizzy/packery.pkgd.js?v=1.3.2"></script>
<script  type="text/javascript" src="${resPath}/metafizzy/draggabilly.pkgd.js?v=1.1.2"></script>
	</ja:case>
</ja:switch>

<%-- Add fancyBox main JS and CSS files --%>
<script type="text/javascript" src="${resPath}/fancybox/jquery.fancybox.js?v=2.1.5"></script>
<link rel="stylesheet" type="text/css" href="${resPath}/fancybox/jquery.fancybox.css?v=2.1.5" media="screen" />
<%-- Add Button helper (this is optional) --%>
<link rel="stylesheet" type="text/css" href="${resPath}/fancybox/fancybox-helpers/jquery.fancybox-buttons.css?v=1.0.5" />
<script type="text/javascript" src="${resPath}/fancybox/fancybox-helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<%-- Add Thumbnail helper (this is optional) --%>
<link rel="stylesheet" type="text/css" href="${resPath}/fancybox/fancybox-helpers/jquery.fancybox-thumbs.css?v=1.0.7" />
<script type="text/javascript" src="${resPath}/fancybox/fancybox-helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<%-- Add Media helper (this is optional) --%>
<script type="text/javascript" src="${resPath}/fancybox/fancybox-helpers/jquery.fancybox-media.js?v=1.0.6"></script>

<ja:if test="${useAmbilight}">
<%-- Add Color Thief (to mimic Philips Ambilight for fancyBox (TM)!) --%>
<script type="text/javascript" src="${resPath}/color-thief/color-thief.js?v2"></script>
<script type="text/javascript" src="${resPath}/color-thief/ambilight.js?v1"></script>
</ja:if>

<ja:if test="${useInfiniteScroll}">
<%-- Add Infinite Scroll (this is optional) --%>
<script type="text/javascript" src="${resPath}/metafizzy/imagesloaded.pkgd.js?v3.1.4"></script>
<script type="text/javascript" src="${resPath}/infinite-scroll/jquery.infinitescroll.min.js?v2.0b2.110713"></script>
<script type="text/javascript" src="${resPath}/lib/jquery-migrate-1.2.0.min.js"></script>
</ja:if>

<ja:if test="${useVideoPlayer}">
<%-- Add flowplayer (this is optional) --%>
<script type="text/javascript" src="${resPath}/flowplayer/flowplayer.js?v5.4.3"></script>
<link rel="stylesheet" type="text/css" href="${resPath}/flowplayer/flowplayer-skin/minimalist.css?v5.4.3" />
</ja:if>

<script type="text/javascript">
/* Global object with handy local data
 */
cementOptions = {
	styleName		: "${styleName}",
	galleryComments	: ${showGalleryComments},
	thumbTitle		: <%= (thumbTextContent == "title") || (thumbTextContent == "titleandcomment")  %>,
	thumbComment	: <%= (thumbTextContent == "comment") || (thumbTextContent == "titleandcomment")  %>,
	thumbExif		: ${thumbExif},
	imageNumber		: ${showImageNumber},
	imageTitle		: <%= (imageTextContent == "title") || (imageTextContent == "titleandcomment")  %>,
	imageComment	: <%= (imageTextContent == "comment") || (imageTextContent == "titleandcomment")  %>,
	imageExif		: ${imageExif},
	layoutlibrary	: "${metafizzyTool}",
	sortAscending 	: false,
	sortCriteria  	: "original",
	isotopelayout	: "masonry",
	isotopefilter	: "*",
	<ja:if test="${useDesign}">
	maxThumbWidth 	: ${maxThumbWidth}+20,
	</ja:if>
	<ja:else>
	maxThumbWidth 	: ${maxThumbWidth},
	</ja:else>
	enlargeFactor	: 1,
	rainbow			: ${useRainbowColor},
	rainbowTimer	: <%= rainbowTimer * 1000 %>,
	rainbowColors	: 18,
	frameColor		: 0,
	fancyBoxBGtransparency	: 0.7,
	fancyBoxGradient		: true,
	version			: "${skinVersion}" <ja:if not test="${useMin}" value=".min">+ "-dev"</ja:if>
};
cementDefaults = $.extend({}, cementOptions);
</script>
<script type="text/javascript" src="${resPath}/cement.js?${skinVersion}"></script>

<ja:if test="<%= showOptionsTab && metafizzyTool != "playful" %>">
<script type="text/javascript" src="${resPath}/cement.optionspanel.js?${skinVersion}"></script>
<link rel="stylesheet" type="text/css" href="${resPath}/forkit/forkit.css" />
</ja:if>

<%-- Add local, jalbum styles, and global javascript variables --%>
<link href="${resPath}/common.css" rel="stylesheet" />
<link href="${stylePath}" rel="stylesheet" />

<%-- Add hook for user s custom styling styles --%>
<link rel="stylesheet" type="text/css" href='${resPath}/custom.css?<%= new SimpleDateFormat("yyyyMMddHHmmss").format(new Date()) %>' />


</head>
<body>
<div id="content">

<%-- Header(s) --%>
<%-- Show gallery title, if chosen in user interface --%>
<div id="header" class="switch-rainbow-border">
<%-- Link to home page, if any --%>
<ja:if exists="homepageAddress"><a href="${homepageAddress}" class="homeicon"><i class="fa fa-home"></i></a></ja:if>
<h1>${title}</h1>
<%-- Link to parent index, if any --%>
<ja:if test="<%= !(parentIndexPage == homepageAddress) %>">
<ja:if exists="parentIndexPage"><a href="${parentIndexPage}"><i class="fa fa-arrow-up"></i></a></ja:if>
</ja:if><%--parentIndexPage==homepageAddress--%>

<nav id="page-nav">
<%-- Create navigation buttons if more than one index page --%>
<ja:if exists="totalIndexes">
<%-- Previous button --%>
<ja:if exists="previousIndexPage"><a href="${previousIndexPage}"><i class="fa fa-arrow-left"></i></a></ja:if>
<ja:else><i class="fa fa-arrow-left disabled"></i></ja:else>
<%-- Next button --%>
<ja:if exists="nextIndexPage"><a href="${nextIndexPage}" id="next-page"><i class="fa fa-arrow-right"></i></a></ja:if>
<ja:else><i class="fa fa-arrow-right disabled"></i></ja:else>
</ja:if>
</nav>

</div><%--header--%>

<ja:if test="<%= showOptionsTab && metafizzyTool != "playful" %>">
<div class="forkit-curtain"><%--optionpanel--%>
	<div class="close-button"></div>
	<form id="formOptions">
		
			<fieldset>
<legend>$text.option.legend.gallery</legend>
<span class="left-label">Interface:</span><input type="radio" id="dark" class="radiodone" name="styleName" value="dark"<ja:if test="${styleName}" value="dark"> checked</ja:if>><label for="dark" class="radio left-label">$text.dark</label>&nbsp<input type="radio" id="light" class="radiodone" name="styleName" value="light"<ja:if test="${styleName}" value="light"> checked</ja:if>><label for="light" class="radio">$text.light</label><br/>
<input type="checkbox" id="rainbow" class="checkdone" <ja:if test="${useRainbowColor}"> checked</ja:if>/><label for="rainbow">$text.option.rainbow</label><br/>
<input type="checkbox" id="galleryComments" class="checkdone" /><label for="galleryComments"<ja:if test="${showGalleryComments}"> checked</ja:if>>$text.option.gallerycomments</label><br/>
<input type="checkbox" id="resetCookie" class="checkdone" /><label for="resetCookie">$text.option.resetcookie</label>
			</fieldset>
			<fieldset>
<legend>$text.option.legend.thumbnails</legend>
<input type="checkbox" id="thumbTitle" class="checkdone" <ja:if test="<%= (thumbTextContent == "title") || (thumbTextContent == "titleandcomment")  %>"> checked</ja:if>/><label for="thumbTitle">$text.option.showtitle</label><br/>
<input type="checkbox" id="thumbComment" class="checkdone" <ja:if test="<%= (thumbTextContent == "comment") || (thumbTextContent == "titleandcomment")  %>"> checked</ja:if>/><label for="thumbComment">$text.option.showcomments</label><br/>
<input type="checkbox" id="thumbExif" class="checkdone" <ja:if test="${thumbExif}"> checked</ja:if>/><label for="thumbExif">$text.option.thumbExif</label>
			</fieldset>
			<fieldset>
<legend>$text.option.legend.image</legend>
<input type="checkbox" id="imageNumber" class="checkdone" <ja:if test="${showImageNumber}"> checked</ja:if>/><label for="imageNumber">$text.ui.showImageNumber</label><br/>
<input type="checkbox" id="imageTitle" class="checkdone" <ja:if test="<%= (imageTextContent == "title") || (imageTextContent == "titleandcomment")  %>"> checked</ja:if>/><label for="imageTitle">$text.option.showtitle</label><br/>
<input type="checkbox" id="imageComment" class="checkdone" <ja:if test="<%= (imageTextContent == "comment") || (imageTextContent == "titleandcomment")  %>"> checked</ja:if>/><label for="imageComment">$text.option.showcomments</label><br/>
<input type="checkbox" id="imageExif" class="checkdone" <ja:if test="${imageExif}"> checked</ja:if>/><label for="imageExif">$text.option.thumbExif</label>
			</fieldset>
<ja:if test="${metafizzyTool}" value="isotope">
			<fieldset>
<legend>$text.option.legend.isotope</legend>
<span class="left-label">$text.option.sort:</span>
<select id="sortType"> 
	<option value="original" checked>$text.sortnone</option> 
	<option value="name">$text.sortalpha</option> 
	<option value="rating">$text.sortrating</option> 
	<option value="random">$text.sortrandom</option> 
</select>
<input type="checkbox" id="sortAscending" class="checkdone" /><label for="sortAscending">$text.option.descending</label><br/>
<span class="left-label">$text.option.show:</span><br />
<input type="radio" name="filter" value="*"       id="filterall"    class="filterdone" checked /><label for="filterall" class="radio">$text.filternone</label>&nbsp;
<input type="radio" name="filter" value=".image"  id="filterimage"  class="filterdone" /><label for="filterimage" class="radio">$text.filterphoto</label>&nbsp;
<input type="radio" name="filter" value=".video"  id="filtervideo"  class="filterdone" /><label for="filtervideo" class="radio">$text.filtervideo</label>&nbsp;
<input type="radio" name="filter" value=".folder" id="filterfolder" class="filterdone" /><label for="filterfolder" class="radio">$text.filtergallery</label><br/>
<span class="left-label">$text.layout:</span>
<select id="arrangeType"> 
	<option value="masonry" checked>$text.isotopelayout.masonry</option>
	<option value="fitRows">$text.isotopelayout.fitRows</option>
	<option value="cellsByRow">$text.isotopelayout.cellsByRow</option>
	<option value="straightDown">$text.isotopelayout.straightDown</option>
	<option value="masonryHorizontal">$text.isotopelayout.masonryHorizontal</option>
	<option value="fitColumns">$text.isotopelayout.fitColumns</option>
	<option value="cellsByColumn">$text.isotopelayout.cellsByColumn</option>
	<option value="straightAcross">$text.isotopelayout.straightAcross</option>
</select>
			</fieldset>
</ja:if><%--metafizzyTool=isotope--%>
	</form>
</div><%--optionpanel--%>
</ja:if><%--showOptionsTab--%>

<ja:if test="<%= ((new File(imageDirectory, "gallery.txt").isFile()) || (description != void)) %>">
<div id="galleryCommentsDiv" class="galleryComments switch-rainbow-border">
<ja:if test="<%= description != void %>">
    <p>${description}</p>
</ja:if>
<ja:if test="<%= (new File(imageDirectory, "gallery.txt").isFile()) %>">
    <ja:include page="<%= new File(imageDirectory, "gallery.txt") %>" />
</ja:if>
</div><%--galleryComments--%>
</ja:if><%--galleryComments?--%>

<%-- Galleries and Images --%>
<%-- Iterate through images and produce index --%>
<div id="container">
<ja:rowiterator>
  <ja:coliterator>
    <div class='item<ja:if exists="cement_width"> w<%= compute_cement_width() %></ja:if> ${fileCategory}' data-bg-color="<%= getImageColor() %>">
	  <ja:if test="${folder}"><%--special treatment if folder: Does it have a cover image?--%>
	    <a href="${closeupPath}" title="${title}" class='anchorfolder' data-fancybox-group="button">
		<ja:if exists="iconPath"><i class="fa fa-picture-o folderplaceholder"></i></ja:if>
		<ja:else><img src="${thumbPath}" width="${thumbWidth}" height="${thumbHeight}" alt="${title}">
	    </ja:else><h4>${title}</h4></a><ja:if test="<%= useFolderOverlayIcon && (iconPath == null) %>"><div class="folder-overlay"><i class="fa fa-picture-o"></i></div></ja:if>
	  </ja:if><%--is folder--%>
	  <ja:else><%--if not a folder, must be an image or a video--%>
		<ja:if test="${fileCategory}" value="video"><%--video--%>
		<a href='<ja:if test="${useVideoPlayer}">#</ja:if>${closeupPath}' title="${title}" class='fancybox-video<ja:if not test="${useVideoPlayer}"> fancybox.iframe</ja:if>'><img src="${thumbPath}" width="${thumbWidth}" height="${thumbHeight}" alt=""><ja:if test="<%= (thumbTextContent == "title") || (thumbTextContent == "titleandcomment")  %>"><div class="fileMeta"><div class="rating">${rating}</div><div class="name">${title}</div><div class="date"><%= fileDate.getTime() %></div></div><%--fileMeta--%><div class="thumbText"><span class="thumbTitle">${title}</span></div></ja:if></a><div class="video-overlay"><i class="fa fa-video-camera"></i></div>
		</ja:if><%--is video--%>
		<ja:else><%--else not video--%>
		<ja:if not test="${metafizzyTool}" value="playful">
			<a href="${closeupPath}" title="${title}" data-cement-text='<%= imageDetailText("image") %>' class="fancybox-photo" data-fancybox-group="button">
			<ja:if exists="cement_width"><%--larger thumb--%>
	    		<img src='<%= get_cement_thumbpath(); %>' width='<%= thumbWidth * cementWidth %>' height='<%= thumbHeight * cementWidth %>' alt="${title}">
			</ja:if><ja:else>
	            <img src="${thumbPath}" width="${thumbWidth}" height="${thumbHeight}" alt="${title}">
			</ja:else><%--else not larger thumb--%>
			<div class="fileMeta"><div class="rating">${rating}</div><div class="name">${title}</div><div class="date"><%= fileDate.getTime() %></div></div><%--fileMeta--%>			
			<ja:if test="${useDesign}">
				<div class="thumbText"><%= imageDetailText("thumb") %></div>
			</ja:if>
	    	</a><ja:if test="${useImageRatingOverlayIcon}"><div class="rating-overlay"><%= getRating(); %></div></ja:if><ja:if test="<%= (thumbTextContent!=null && thumbTextContent!=void) %>"><ja:if not test="${useDesign}"><div class="thumbText"><%= imageDetailText("thumb") %></div></ja:if></ja:if>
		</ja:if><%--not playful--%>
		<ja:else><%--playful--%>
			<ja:if exists="cement_width"><%--larger thumb--%>
	<img class="thumbnail" src='<%= get_cement_thumbpath(); %>' width='<%= thumbWidth * cementWidth %>' height='<%= thumbHeight * cementWidth %>'
		 data-cement-width='<%= thumbWidth * cementWidth %>' data-cement-height='<%= thumbHeight * cementWidth %>' data-cement-across="${cementWidth}"
			</ja:if><ja:else>
	<img class="thumbnail" src="${thumbPath}" width="${thumbWidth}" height="${thumbHeight}"
		 data-cement-width="${thumbWidth}" data-cement-height="${thumbHeight}" data-cement-across="1"
			</ja:else><%--else not larger thumb--%>
		 data-cement-altsrc="${closeupPath}" data-cement-maxwidth="${imageWidth}" data-cement-maxheight="${imageHeight}" alt="${title}" >			
		</ja:else><%--playful--%>
		</ja:else><%--else not video--%>
	  </ja:else><%--else not folder--%>
    </div><%--item--%>
  </ja:coliterator>
</ja:rowiterator>
</div><%--container--%>

<%-- Footer(s) --%>
<div id="footer" class="switch-rainbow-border">
<ja:if exists="homepageAddress"><ja:if exists="homepageLinkText"><a href="${homepageAddress}" class="homepagelink">${homepageLinkText}</a></ja:if></ja:if>
<ja:if exists="creditText"><a href="${generatorUrl}" class="creditlink" target="_blank">${creditText}</a></ja:if>
</div><%--footer--%>

</div><%--content--%>

<ja:if test="${showOptionsTab}">
<!-- The ribbon -->
<a class="forkit" data-text=<ja:if test="${useMin}" value=".min">"$text.option.open"</ja:if><ja:else>"$text.ui.developer"</ja:else> data-text-detached="$text.option.drag" href="#"><img style="position: absolute; top: 0; right: 0; border: 0;" src="${resPath}/forkit/ribbon.png" alt=<ja:if test="${useMin}" value=".min">"$text.option.open"</ja:if><ja:else>"$text.ui.developer"</ja:else>></a>
<script type="text/javascript" src="${resPath}/forkit/forkit.js"></script>
</ja:if>

<%-- Restore options from cookie if available --%>
<script type="text/javascript">
$(".item").css('background-color', function() {
	return $(this).data('bg-color');
});
<ja:if test="${showOptionsTab}">
restoreCookie();
</ja:if>
<ja:else>
restoreOptions();
</ja:else>
</script>

<%-- Add gridding layout library --%>
<ja:switch test="${metafizzyTool}">

	<ja:case value="playful">
<%-- Initiate Packery & Draggabilly & Gigante --%>
<script type="text/javascript">
// note: Items to process have class .thumbnail.
$(window).resize(function () {
	computeWidth();
	$('#container .thumbnail').each(function() {
		resizeImage($(this), true);
	});
	$('#container').packery();
});

$(function() {
	last = new Date();
	computeWidth();
	var container = document.querySelector('#container');
	var $container = $('#container');
	pckry = $container.packery({
		columnWidth: cementOptions.maxThumbWidth,
		rowHeight: 10
	});

	var $itemElems = $( $container.packery('getItemElements') );

	$itemElems.draggable()
	    .click(function() {	
			// draggable action here
			if ( $(this).is('.ui-draggable-dragging') )
				return;
			// click action here
			now = new Date();
			eventie.bind( container, 'click', function( event ) {
				// don't proceed if item was not clicked on
				if  (   !classie.has( event.target, 'thumbnail' )	// not a valid thumbnail
					|| (cementOptions.enlargeFactor == 1)			// no space to enlarge
					|| ((now.getTime() - last.getTime()) < 200)		// multiple clicks taken into account
					) return;
				// change size of item via class
				resizeImage($(event.target), false);
				// trigger layout
				$container.packery();
				last = new Date();
			});//eventie.bind
		});//.click function

	$container.packery( 'bindUIDraggableEvents', $itemElems );
});//$(function()
</script>
	</ja:case>


	<ja:case value="packery">
<%-- Initiate Packery --%>
<script type="text/javascript">

// overwrite Packery methods
var __resetLayout = Packery.prototype._resetLayout;
Packery.prototype._resetLayout = function() {
  __resetLayout.call( this );
  // reset packer
  var parentSize = getSize( this.element.parentNode );
  this.fitWidth = Math.floor( ( parentSize.innerWidth + this.gutter ) / this.columnWidth ) * this.columnWidth;
  this.packer.width = this.fitWidth;
  this.packer.height = Number.POSITIVE_INFINITY;
  this.packer.reset();
};

Packery.prototype._getContainerSize = function() {
  // remove empty space from fit width
  var emptyWidth = 0;
  for ( var i=0, len = this.packer.spaces.length; i < len; i++ ) {
    var space = this.packer.spaces[i];
    if ( space.y === 0 ) {
      emptyWidth += space.width;
    }
  }

  return {
    width: this.fitWidth - emptyWidth - this.gutter,
    height: this.maxY - this.gutter
  };
};

// always resize
Packery.prototype.resize = function() {
  this.layout();
};

var container = document.querySelector('#container');
packery = new Packery( container, {
	// options
	itemSelector: '.item',
	columnWidth: cementOptions.maxThumbWidth,
	gutter: 0
});
function reLayout() {
	packery.layout();
}
</script>	
	</ja:case>


	<ja:case value="masonry">
<%-- Initiate Masonry --%>
<ja:if test="${useInfiniteScroll}">
<script type="text/javascript">
$(function(){
	var $container = $('#container');
    
    $container.imagesLoaded(function(){
		$container.masonry({
	        itemSelector: '.item',
	        columnWidth: cementOptions.maxThumbWidth,
			isFitWidth: true
		});
    });
    
    $container.infinitescroll({
		navSelector  : '#page-nav',		// selector for the paged navigation (will be hidden)
		nextSelector : '#next-page',	// selector for the NEXT link (to page 2)
		itemSelector : '.item',			// selector for all items you'll retrieve
		loading: {
			finishedMsg: "$text.nomorepage",
			img: '${resPath}/infinite-scroll/loading.gif'
        },
      	},
      	// trigger Masonry as a callback
      	function( newElements ) {
	        // hide new items while they are loading
	        var $newElems = $( newElements ).css({ opacity: 0 });
	        // ensure that images load before adding to masonry layout
	        $newElems.imagesLoaded(function(){
				// show elems now they're ready
				$newElems.animate({ opacity: 1 });
				$container.masonry( 'appended', $newElems, true );
				showHideText();
        	});
      	}
    );
});
</script>
</ja:if>
<ja:else>
<script type="text/javascript">
var container = document.querySelector('#container');
masonry = new Masonry( container, {
    columnWidth: cementOptions.maxThumbWidth,
	itemSelector: '.item',
	isFitWidth: true
});
function reLayout() {
	masonry.layout();
}
</script>	
</ja:else>
	</ja:case>
	
	
	<ja:case value="isotope">
<%-- Initiate Isotope --%>
<script type="text/javascript">
$.Isotope.prototype._getCenteredMasonryColumns = function() {
    this.width = this.element.width();
    var parentWidth = this.element.parent().width();
    var colW = this.options.masonry && this.options.masonry.columnWidth || // i.e. options.masonry && options.masonry.columnWidth
    this.$filteredAtoms.outerWidth(true) || // or use the size of the first item
    parentWidth; // if there's no items, use size of container
    var cols = Math.floor(parentWidth / colW);
    cols = Math.max(cols, 1);
    this.masonry.cols = cols; // i.e. this.masonry.cols = ....
    this.masonry.columnWidth = colW; // i.e. this.masonry.columnWidth = ...
};

$.Isotope.prototype._masonryReset = function() {
    this.masonry = {}; // layout-specific props
    this._getCenteredMasonryColumns(); // FIXME shouldn't have to call this again
    var i = this.masonry.cols;
    this.masonry.colYs = [];
        while (i--) {
        this.masonry.colYs.push(0);
    }
};

$.Isotope.prototype._masonryResizeChanged = function() {
    var prevColCount = this.masonry.cols;
    this._getCenteredMasonryColumns(); // get updated colCount
    return (this.masonry.cols !== prevColCount);
};

$.Isotope.prototype._masonryGetContainerSize = function() {
    var unusedCols = 0,
    i = this.masonry.cols;
        while (--i) { // count unused columns
        if (this.masonry.colYs[i] !== 0) {
            break;
        }
        unusedCols++;
    }
    return {
        height: Math.max.apply(Math, this.masonry.colYs),
        width: (this.masonry.cols - unusedCols) * this.masonry.columnWidth // fit container to columns that have been used;
    };
};

$('#container').isotope({
	// options
	itemSelector	: '.item',
	getSortData		: {
	    name : function ( $elem ) {
			return $elem.find('.name').text();
	    },
	    rating : function ( $elem ) {
			return parseInt( $elem.find('.rating').text(), 10 );
	    },
	    date : function ( $elem ) {
			return parseInt( $elem.find('.date').text(), 10 );
	    }
	},
	sortBy			: cementOptions.sortCriteria,
    sortAscending	: cementOptions.sortAscending,
	layoutMode		: cementOptions.isotopelayout,
	filter			: cementOptions.isotopefilter
});
function reLayout() {
	$('#container').isotope('reLayout');
}
</script>	
	</ja:case>
	
</ja:switch><%--${metafizzyTool}--%>

<ja:if test="${useDesign}">
<script type="text/javascript">
var container = $("#container");
var header = $("#header");
var containerMargin = ( $("#content").width() - Math.floor(container.width()/cementOptions.maxThumbWidth) * cementOptions.maxThumbWidth );
var contentWidth = $("#content").width();
container.width(contentWidth - containerMargin);
header.width(contentWidth - containerMargin - 60);
container.css("margin-left",function() { return containerMargin / 2; });
$(window).resize(function () {
	container.width($("#content").width());
	containerMargin = ( $("#content").width() - Math.floor(container.width()/cementOptions.maxThumbWidth) * cementOptions.maxThumbWidth );
	contentWidth = $("#content").width();
	container.width(contentWidth - containerMargin);
	header.width(contentWidth - containerMargin - 60);
	container.css("margin-left",function() { return containerMargin / 2; });
});
</script>
</ja:if>

<ja:if not test="${metafizzyTool}" value="playful">
<%-- Initiate Fancybox for images --%>
<script type="text/javascript">
$('.fancybox-photo').fancybox({
	openEffect  : '<%= fancyOpenCloseStyle.toLowerCase() %>',
	closeEffect : '<%= fancyOpenCloseStyle.toLowerCase() %>',
	prevEffect  : '<%= fancyPrevNextStyle.toLowerCase() %>',
	nextEffect  : '<%= fancyPrevNextStyle.toLowerCase() %>',
	closeBtn    : false,
	helpers : {
		title  : {
			type  : '<%= fancyTitlePosition.toLowerCase() %>'
		},
		<ja:if test="${fancyShowThumbnails}">
		thumbs : {
           	width : 50,
           	height: 50
       	},			
		</ja:if>
		buttons: {}
	},
	afterClose : function() {
		$('#content').removeClass('fancyblurr');
	},
	afterLoad : function() {
		$('#content').addClass('fancyblurr');
		//var text = $(this.element).attr('data-cement-text');
		var imgTitl = $(this.element).attr('data-cement-text');
		var imgLink = $(this.element).attr('data-cement-link');
		this.title =   ( cementOptions.imageNumber ? (<%= "'" + texts.getString("photo") + "'" %> + " " + (this.index + 1)
						+ " " + <%= " '" + texts.getString("part_of") + "' " %> + " " + this.group.length + '. ') : "" )
						+ (cementOptions.imageTitle   ? imgTitl : "")
						+ ((imgLink != "")            ? ((cementOptions.imageTitle && imgTitl != "") ? " - ": "") + imgLink : "")
						+ (cementOptions.imageComment ? $(this.element).attr('data-cement-comments') : "")
						+ (cementOptions.imageExif    ? $(this.element).attr('data-cement-exif') : "")
		;
<ja:if test="${useAmbilight}">
		// Ambilight for fancyBox
		var colorThief = new ColorThief();
		var image = $(this.element).children('img').first();
		if(cementOptions.fancyBoxGradient) {
			var colors = colorThief.getGradientPalette(image[0], 10, 0.05);
			var rgbfrom = 'rgba('+colors[0][0]+','+colors[0][1]+','+colors[0][2]+', '+cementOptions.fancyBoxBGtransparency+')';
			var rgbto   = 'rgba('+colors[1][0]+','+colors[1][1]+','+colors[1][2]+', '+cementOptions.fancyBoxBGtransparency+')';
			var backgrounds = [
				'none',
				'rgb('+colors[0][0]+','+colors[0][1]+','+colors[0][2]+')',
				'-moz-linear-gradient(top,'+rgbfrom+' 0%,'+rgbto+' 100%)',
				'-webkit-gradient(linear, left top, left bottom, color-stop(0%,'+rgbfrom+'), color-stop(100%,'+rgbto+'))',
				'-webkit-linear-gradient(top,'+rgbfrom+' 0%,'+rgbto+' 100%)',
				'-o-linear-gradient(top,'+rgbfrom+' 0%,'+rgbto+' 100%)',
				'-ms-linear-gradient(top,'+rgbfrom+' 0%,'+rgbto+' 100%)',
				'linear-gradient(to bottom,'+rgbfrom+' 0%,'+rgbto+' 100%)'
			];
			for(i=0; i<backgrounds.length; i++)
			    $('.fancybox-overlay').css({ background: backgrounds[i] });
			// filter temporarily ignored because of hex values.
			// $('.fancybox-overlay').css({
    		//     'filter': "progid:DXImageTransform.Microsoft.gradient( startColorstr='"+rgbfrom+"', endColorstr='"+rgbfrom+"',GradientType=0 )"
			// });
		} else {
			var colors = colorThief.getColor(image[0]);
			var rgba = 'rgba('+colors[0]+', '+colors[1]+', '+colors[2]+', '+cementOptions.fancyBoxBGtransparency+')';
			$('.fancybox-overlay').css('background-image', 'none').css('background-color', rgba);
		}
</ja:if><%--useAmbilight--%>
	}
});
</script>	


<%-- Initiate Fancybox for videos --%>
<ja:if test="${useVideoPlayer}">
<script type="text/javascript">
$(function() {
	$('.fancybox-video').fancybox({
		tpl: {
			wrap: '<div class="fancybox-wrap fancybox-wrap-video" tabIndex="-1">' +
					'<div class="fancybox-skin">' +
					'<div class="fancybox-outer">' +
					'<div id="fancyplayer"></div>' +
					'<div id="fancybox-thumbs" class="bottom"></div>' +
					'</div></div></div>' 
		},
		beforeShow: function () {
			$('#content').addClass('fancyblurr');
			$("#fancyplayer").flowplayer({
				splash: true,
				playlist: [[{ mp4: this.href.slice(1) }]]
			});
			flowplayer("#fancyplayer").play(0);
		},
		beforeClose: function () {
			flowplayer("#fancyplayer").unload();
			$('#content').removeClass('fancyblurr');
		}
	});
});
</script>
</ja:if><%--useVideoPlayer--%>
<ja:else><%--not useVideoPlayer--%>
<script type="text/javascript">
$('.fancybox-video').fancybox({
	openEffect  : 'none',
	closeEffect : 'none',
	nextEffect  : 'none',
	prevEffect  : 'none',
	padding     : 0,
	margin      : [20, 60, 20, 60] // Increase left/right margin
});
</script>
</ja:else><%--not useVideoPlayer--%>

</ja:if><%--metafizzyTool!=playful--%>


</body>
</html>
